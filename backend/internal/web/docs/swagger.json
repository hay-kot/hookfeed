{
    "swagger": "2.0",
    "info": {
        "description": "This is a standard Rest API template",
        "title": "hookfeed",
        "contact": {},
        "version": "0.1"
    },
    "basePath": "/api",
    "paths": {
        "/hooks/{slug}": {
            "post": {
                "description": "Accepts webhooks in any format and processes them according to feed configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Webhooks"
                ],
                "summary": "Receive webhook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Feed key (from feed configuration)",
                        "name": "key",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Webhook payload (any JSON)",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/dtos.WebhookResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResp"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResp"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResp"
                        }
                    }
                }
            }
        },
        "/v1/feed-messages": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Search messages with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feed Messages"
                ],
                "summary": "Search messages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by feed slug",
                        "name": "feedSlug",
                        "in": "query"
                    },
                    {
                        "maximum": 5,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Filter by priority (1-5)",
                        "name": "priority",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "new",
                            "acknowledged",
                            "resolved",
                            "archived"
                        ],
                        "type": "string",
                        "description": "Filter by state",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by received date (ISO 8601)",
                        "name": "since",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by received date (ISO 8601)",
                        "name": "until",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "The number of items to skip",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "The number of items to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.PaginationResponse-dtos_FeedMessage"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new FeedMessage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feed Messages"
                ],
                "summary": "Create a new FeedMessage",
                "parameters": [
                    {
                        "description": "The FeedMessage details",
                        "name": "FeedMessage",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.FeedMessageCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dtos.FeedMessage"
                        }
                    }
                }
            }
        },
        "/v1/feed-messages/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a FeedMessage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feed Messages"
                ],
                "summary": "Get a FeedMessage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The FeedMessage ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.FeedMessage"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a FeedMessage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feed Messages"
                ],
                "summary": "Delete a FeedMessage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The FeedMessage ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/feed-messages/{id}/state": {
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a FeedMessage state",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feed Messages"
                ],
                "summary": "Update a FeedMessage state",
                "parameters": [
                    {
                        "description": "The state update",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.FeedMessageUpdateState"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The FeedMessage ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.FeedMessage"
                        }
                    }
                }
            }
        },
        "/v1/feeds": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all feeds configured in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feeds"
                ],
                "summary": "Get all feeds",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.Feed"
                            }
                        }
                    }
                }
            }
        },
        "/v1/feeds/{feed-slug}/messages/bulk-delete": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Bulk delete messages for a feed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feed Messages"
                ],
                "summary": "Bulk delete messages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The Feed Slug",
                        "name": "feed-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The bulk delete request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.FeedMessageBulkDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "/v1/feeds/{feed-slug}/messages/bulk-state": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Bulk update message states for a feed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feed Messages"
                ],
                "summary": "Bulk update message states",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The Feed Slug",
                        "name": "feed-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The bulk update request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.FeedMessageBulkUpdateState"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/info": {
            "get": {
                "description": "Get the status of the service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Status"
                ],
                "summary": "Get the status of the service",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.StatusResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/login": {
            "post": {
                "description": "Authenticate a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Authenticate a user",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UserAuthenticate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UserSession"
                        }
                    }
                }
            }
        },
        "/v1/users/register": {
            "post": {
                "description": "Register a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UserRegister"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dtos.User"
                        }
                    }
                }
            }
        },
        "/v1/users/request-password-reset": {
            "post": {
                "description": "Request a password reset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Request a password reset",
                "parameters": [
                    {
                        "description": "User details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.PasswordResetRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/users/reset-password": {
            "post": {
                "description": "Reset a user's password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Reset a user's password",
                "parameters": [
                    {
                        "description": "User details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.PasswordReset"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/users/self": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get the current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.User"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update the current user's details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update the current user's details",
                "parameters": [
                    {
                        "description": "User details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UserUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.User"
                        }
                    }
                }
            }
        },
        "/{topic}": {
            "put": {
                "description": "Accepts ntfy-style POST/PUT requests for publishing notifications",
                "consumes": [
                    "application/json",
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ntfy"
                ],
                "summary": "Publish ntfy-compatible notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic/Feed name",
                        "name": "topic",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Notification title",
                        "name": "X-Title",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Priority (1-5, default 3)",
                        "name": "X-Priority",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated tags",
                        "name": "X-Tags",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Message content",
                        "name": "X-Message",
                        "in": "header"
                    },
                    {
                        "description": "Message body (plain text or JSON)",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.FeedMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Accepts ntfy-style POST/PUT requests for publishing notifications",
                "consumes": [
                    "application/json",
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ntfy"
                ],
                "summary": "Publish ntfy-compatible notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic/Feed name",
                        "name": "topic",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Notification title",
                        "name": "X-Title",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Priority (1-5, default 3)",
                        "name": "X-Priority",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated tags",
                        "name": "X-Tags",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Message content",
                        "name": "X-Message",
                        "in": "header"
                    },
                    {
                        "description": "Message body (plain text or JSON)",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.FeedMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.Feed": {
            "type": "object",
            "properties": {
                "adapters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "middleware": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "retention": {
                    "$ref": "#/definitions/dtos.Retention"
                }
            }
        },
        "dtos.FeedMessage": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "feedSlug": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                },
                "metadata": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "priority": {
                    "type": "integer"
                },
                "processedAt": {
                    "type": "string"
                },
                "rawHeaders": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "rawRequest": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "receivedAt": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "stateChangedAt": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "dtos.FeedMessageBulkDelete": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/dtos.FeedMessageDeleteFilter"
                },
                "messageIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dtos.FeedMessageBulkUpdateState": {
            "type": "object",
            "required": [
                "messageIds",
                "state"
            ],
            "properties": {
                "messageIds": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    }
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "new",
                        "acknowledged",
                        "resolved",
                        "archived"
                    ]
                }
            }
        },
        "dtos.FeedMessageCreate": {
            "type": "object",
            "required": [
                "feedSlug",
                "rawHeaders",
                "rawRequest"
            ],
            "properties": {
                "feedSlug": {
                    "type": "string"
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                },
                "metadata": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "priority": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 1
                },
                "processedAt": {
                    "type": "string"
                },
                "rawHeaders": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "rawRequest": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "receivedAt": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "new",
                        "acknowledged",
                        "resolved",
                        "archived"
                    ]
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dtos.FeedMessageDeleteFilter": {
            "type": "object",
            "properties": {
                "olderThan": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 1
                }
            }
        },
        "dtos.FeedMessageUpdateState": {
            "type": "object",
            "required": [
                "state"
            ],
            "properties": {
                "state": {
                    "type": "string",
                    "enum": [
                        "new",
                        "acknowledged",
                        "resolved",
                        "archived"
                    ]
                }
            }
        },
        "dtos.PaginationResponse-dtos_FeedMessage": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.FeedMessage"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dtos.PasswordReset": {
            "type": "object",
            "required": [
                "password",
                "token"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "dtos.PasswordResetRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "dtos.Retention": {
            "type": "object",
            "properties": {
                "maxAgeDays": {
                    "type": "integer"
                },
                "maxCount": {
                    "type": "integer"
                }
            }
        },
        "dtos.StatusResponse": {
            "type": "object",
            "properties": {
                "build": {
                    "type": "string"
                }
            }
        },
        "dtos.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "subscriptionEndedDate": {
                    "type": "string"
                },
                "subscriptionStartDate": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dtos.UserAuthenticate": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dtos.UserRegister": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 6
                },
                "username": {
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 6
                }
            }
        },
        "dtos.UserSession": {
            "type": "object",
            "properties": {
                "expiresAt": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "dtos.UserUpdate": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 6
                },
                "username": {
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 6
                }
            }
        },
        "dtos.WebhookResponse": {
            "type": "object",
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "messageId": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "server.ErrorResp": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "requestId": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "\"Type 'Bearer TOKEN' to correctly set the API Key\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}