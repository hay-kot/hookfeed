# https://taskfile.dev

version: "3"

vars:
  GREETING: Hello, World!

tasks:
  swag:
    dir: backend/internal/web/docs/
    desc: Generate swagger docs
    sources:
      - ./backend/cmd/api/main.go
      - ./backend/internal/data/dtos/*.go
      - ./backend/internal/web/handlers/*.go
    generates:
      - ./backend/internal/web/docs/swagger.json
    vars:
      BACKEND: ./../../..
    cmds:
      - echo {{ .BACKEND }}
      - swag fmt --dir={{ .BACKEND }}/internal
      - |
        swag init --outputTypes=json \
          --generalInfo {{ .BACKEND }}/cmd/api/main.go \
          --dir={{ .BACKEND }}/internal/xapps/webapi/ \
          --output={{ .BACKEND }}/internal/web/docs/ \
          --parseDependency

  gen:ts:
    desc: Generate typescript types
    cmds:
      - |
        swagger-typescript-api generate \
         --no-client \
         --modular \
         --path ./backend/internal/web/docs/swagger.json \
         --output ./frontend/lib/api/types \
    sources:
      - "./backend/internal/web/docs/swagger.json"

  gen:code:
    desc: run new code generators
    dir: backend
    sources:
      - "./frontend/lib/api/types/data-contracts.ts"
      - "./backend/internal/web/docs/swagger.json"
    cmds:
      - go run ./cmd/tools/codegen/ generate --config=../codegen.json

  gen:
    deps:
      - swag
    cmds:
      - task: gen:ts
      - task: gen:code

  svc:
    cmds:
      - docker compose up

  tidy:
    dir: backend
    cmds:
      - go mod tidy

  lint:
    dir: backend
    desc: Runs golangci-lint
    cmds:
      - golangci-lint run ./...

  fmt:
    dir: backend
    desc: Runs go fmt on the backend
    cmds:
      - go fmt ./...

  run:
    dir: backend
    deps:
      - gen
    cmds:
      - go run ./cmd/hookfeed/ serve --config=../dev/dev.feeds.yml --middleware-dir=../dev/middleware

  seed:
    dir: backend
    deps:
      - gen
    cmds:
      - go run ./cmd/tools/seed/ seed --config=../seedfile.json

  test:
    dir: backend
    desc: Runs all go tests
    cmds:
      - go test {{ .CLI_ARGS }} ./...

  db:sqlc:
    aliases: ["sqlc"]
    dir: backend
    desc: "Generate the sqlc code"
    sources:
      - ./internal/data/db/migrations/sql/*.sql
      - ./internal/data/db/*.sql
      - ./sqlc.yml
    generates:
      - ./internal/data/db/*.go
    cmds:
      - sqlc generate

  db:migrate:
    desc: "Creates a new up/down migration ex: `task db:migrate:empty -- create_user_table`"
    dir: ./backend/internal/data/db/migrations/sql
    cmds:
      - goose create {{ .CLI_ARGS }} sql

  ui:*:
    desc: Forwards commands to the bun/package.json file
    dir: frontend
    cmds:
      - bun run {{ index .MATCH 0 }}
