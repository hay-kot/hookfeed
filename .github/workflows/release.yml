name: Release

on:
  workflow_dispatch:
    inputs:
      version_bump:
        description: "Version bump type"
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
        default: "patch"

permissions:
  contents: write
  packages: write

jobs:
  backend-tests:
    name: "Go Build/Test"
    uses: ./.github/workflows/partial-tests.yml

  tag:
    name: "Create Release Tag"
    runs-on: ubuntu-latest
    needs:
      - backend-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Get latest tag
        id: get-latest-tag
        uses: actions-ecosystem/action-get-latest-tag@v1

      - name: Bump semver
        id: bump-semver
        uses: actions-ecosystem/action-bump-semver@v1
        with:
          current_version: ${{ steps.get-latest-tag.outputs.tag }}
          level: ${{ inputs.version_bump }}

      - name: Push tag
        uses: actions-ecosystem/action-push-tag@v1
        with:
          tag: ${{ steps.bump-semver.outputs.new_version }}
          message: "Release ${{ steps.bump-semver.outputs.new_version }}"

  release:
    name: "Build and Publish Release"
    runs-on: ubuntu-latest
    needs:
      - tag
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Fetch tags
        run: git fetch --force --tags

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: "backend/go.mod"

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

        # Add support for more platforms with QEMU (optional)
        # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Task
        uses: go-task/setup-task@v1

      - name: Build Frontend UI
        run: task build:ui

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --clean
          workdir: backend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
